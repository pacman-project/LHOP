# -*- Mode: CMake; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- *

LIST(APPEND LIB_API_SOURCES hop.cpp hopstorage.cpp hopcreate.cpp hoplearning.cpp libmain.cpp)
LIST(APPEND LIB_API_HEADERS hop.h hopstorage.h)

SET(CREATE_PROTOBUF FALSE CACHE BOOL "Support for Protobuf format")

IF (CREATE_PROTOBUF)
    FIND_PACKAGE(Protobuf REQUIRED)

    INCLUDE(Protoc REQUIRED)

    INCLUDE_DIRECTORIES(${PROTOBUF_INCLUDE_DIRS})
    INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

    PROTOBUF_GEN_CPP(PROTO_SRCS PROTO_HDRS protobuf/hop.proto)
    LIST(APPEND LIB_API_SOURCES ${LIB_API_SOURCES} ${PROTO_SRCS})
    LIST(APPEND LIB_API_HEADERS ${LIB_API_HEADERS} ${PROTO_HDRS})
    ADD_DEFINITIONS(-DPROTOBUF_SUPPORT)
ENDIF (CREATE_PROTOBUF)

ADD_LIBRARY(hop SHARED ${LIB_API_SOURCES} ${LIB_API_HEADERS})
TARGET_LINK_LIBRARIES(hop hopstatic)

IF (CREATE_PROTOBUF)
    TARGET_LINK_LIBRARIES(hop ${PROTOBUF_LIBRARY})
ENDIF (CREATE_PROTOBUF)

SET(CREATE_JHOP FALSE CACHE BOOL "Create a Java interface using SWIG")

IF (CREATE_JHOP)
    ADD_SUBDIRECTORY(java)
ENDIF (CREATE_JHOP)

SET(API_HEADER_FILES hop.h)

INSTALL(FILES ${API_HEADER_FILES} DESTINATION include/hop)

IF (WIN32)
    SET(WIN32_INSTALL "C:/Programs" CACHE PATH "Installation path")
    INSTALL(TARGETS hop DESTINATION ${WIN32_INSTALL})
ELSE (WIN32)
    INSTALL(TARGETS hop LIBRARY DESTINATION lib)
ENDIF (WIN32)
