# -*- Mode: CMake; indent-tabs-mode: nil; c-basic-offset: 4; tab-width: 4 -*- *
CMAKE_MINIMUM_REQUIRED(VERSION 2.8.8)

SET(OPENMP_ENABLE TRUE CACHE BOOL "Enable OpenMP support")

FIND_PACKAGE(OpenCV REQUIRED)
FIND_PACKAGE(TBB REQUIRED)
FIND_PACKAGE(ZLIB REQUIRED)
FIND_PACKAGE(OpenMP) 

IF (OPENMP_ENABLE)
	SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
ENDIF (OPENMP_ENABLE)

LINK_LIBRARIES(${OpenCV_LIBS} ${TBB_LIBRARIES} ${ZLIB_LIBRARIES})
LINK_DIRECTORIES(${TBB_LIBRARY_DIRS})

INCLUDE_DIRECTORIES(AFTER ${OpenCV_INCLUDE_DIR} ${TBB_INCLUDE_DIRS} ${ZLIB_INCLUDE_DIR} .)

FILE(GLOB_RECURSE UTILS_SERIALIZATION_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/utils/serialization/*.cpp)
FILE(GLOB_RECURSE UTILS_SERIALIZATION_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/utils/serialization/*.h*)

FILE(GLOB_RECURSE UTILS_GRAPHS_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/utils/graphs/*.cpp)
FILE(GLOB_RECURSE UTILS_GRAPHS_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/utils/graphs/*.h*)

FILE(GLOB_RECURSE UTILS_MATCHING_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/utils/matching/*.cpp)
FILE(GLOB_RECURSE UTILS_MATCHING_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/utils/matching/*.h*)

FILE(GLOB UTILS_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/utils/*.cpp)
FILE(GLOB UTILS_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/utils/*.h)

FILE(GLOB CORE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/*.cpp)
FILE(GLOB CORE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/*.h)

FILE(GLOB_RECURSE CORE_STRUCTURES_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/structures/*.cpp)
FILE(GLOB_RECURSE CORE_STRUCTURES_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/structures/*.h*)

FILE(GLOB_RECURSE CORE_FEATURE_EXTREACTION_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/feature_extraction/*.cpp)
FILE(GLOB_RECURSE CORE_FEATURE_EXTREACTION_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/feature_extraction/*.h*)

FILE(GLOB_RECURSE CORE_INFERENCE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/inference/*.cpp)
FILE(GLOB_RECURSE CORE_INFERENCE_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/inference/*.h*)

FILE(GLOB_RECURSE CORE_LEARNING_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/learning/*.cpp)
FILE(GLOB_RECURSE CORE_LEARNING_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/learning/*.h*)

FILE(GLOB_RECURSE CORE_IO_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/input_output/*.cpp)
FILE(GLOB_RECURSE CORE_IO_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/input_output/*.h*)

FILE(GLOB_RECURSE UNDEF_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/core/legacy/*.cpp)
FILE(GLOB_RECURSE UNDEF_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/core/legacy/*.h*)

FILE(GLOB_RECURSE MODULE_HOC_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/modules/histogram-of-compositions/*.cpp 
									 ${CMAKE_CURRENT_SOURCE_DIR}/modules/histogram-of-compositions/*.h*)

FILE(GLOB MODULE_SHAPES_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/*.cpp 
								${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/*.h*)

FILE(GLOB_RECURSE MODULE_SHAPES_INFERENCE_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/inference/*.cpp
													${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/inference/*.h*)
FILE(GLOB_RECURSE MODULE_SHAPES_FEATURE_EXTREACTION_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/feature_extraction/*.cpp
															${CMAKE_CURRENT_SOURCE_DIR}/modules/shapes/feature_extraction/*.h*)


IF (WIN32)
    LINK_LIBRARIES(Psapi)
    LIST(APPEND LIB_HEADERS tools/interface/targetver.h)
    # Windows dlls requre special export declarations for external functions
    # ... we do not have them yet.
ENDIF (WIN32)

INCLUDE_DIRECTORIES(.)

ADD_LIBRARY(static_core OBJECT ${CORE_SOURCES} ${CORE_STRUCTURES_SOURCES} ${CORE_FEATURE_EXTREACTION_SOURCES} ${CORE_INFERENCE_SOURCES} ${CORE_LEARNING_SOURCES} ${CORE_IO_SOURCES} ${UNDEF_SOURCES} 
								${CORE_HEADERS} ${CORE_STRUCTURES_HEADERS} ${CORE_FEATURE_EXTREACTION_HEADERS} ${CORE_INFERENCE_HEADERS} ${CORE_LEARNING_HEADERS} ${CORE_IO_HEADERS} ${UNDEF_HEADERS})

SOURCE_GROUP ("Core Files" FILES ${CORE_SOURCES} ${CORE_HEADERS})
SOURCE_GROUP ("Structure Files" FILES ${CORE_STRUCTURES_SOURCES} ${CORE_STRUCTURES_HEADERS})
SOURCE_GROUP ("Feature Extraction Files" FILES ${CORE_FEATURE_EXTREACTION_SOURCES} ${CORE_FEATURE_EXTREACTION_HEADERS})
SOURCE_GROUP ("Inference Files" FILES ${CORE_INFERENCE_SOURCES} ${CORE_INFERENCE_HEADERS})
SOURCE_GROUP ("Learning Files" FILES ${CORE_LEARNING_SOURCES} ${CORE_LEARNING_HEADERS})
SOURCE_GROUP ("Input Output Files" FILES ${CORE_IO_SOURCES} ${CORE_IO_HEADERS})
SOURCE_GROUP ("TODO move Files" FILES ${UNDEF_SOURCES} ${UNDEF_HEADERS})

ADD_LIBRARY(static_utils OBJECT ${UTILS_SERIALIZATION_SOURCES} ${UTILS_GRAPHS_SOURCES} ${UTILS_MATCHING_SOURCES} ${UTILS_SOURCES} ${UTILS_SERIALIZATION_HEADERS} ${UTILS_GRAPHS_HEADERS} ${UTILS_MATCHING_HEADERS} ${UTILS_HEADERS})

SOURCE_GROUP ("Utility Files" FILES ${UTILS_SOURCES} ${UTILS_HEADERS})
SOURCE_GROUP ("Graph Files" FILES ${UTILS_GRAPHS_SOURCES} ${UTILS_GRAPHS_HEADERS})
SOURCE_GROUP ("Serialization Files" FILES ${UTILS_SERIALIZATION_SOURCES} ${UTILS_SERIALIZATION_HEADERS})
SOURCE_GROUP ("Matching Files" FILES ${UTILS_MATCHING_SOURCES} ${UTILS_MATCHING_HEADERS})

ADD_LIBRARY(static_modules_hoc OBJECT ${MODULE_HOC_SOURCES})


ADD_LIBRARY(static_modules_shapes OBJECT ${MODULE_SHAPES_SOURCE} ${MODULE_SHAPES_INFERENCE_SOURCES} ${MODULE_SHAPES_FEATURE_EXTREACTION_SOURCES} ${MODULE_SHAPES_LEARNING_SOURCES})

SOURCE_GROUP ("Structure Files" FILES ${MODULE_SHAPES_SOURCE})
SOURCE_GROUP ("Feature Extraction Files" FILES ${MODULE_SHAPES_FEATURE_EXTREACTION_SOURCES})
SOURCE_GROUP ("Inference Files" FILES ${MODULE_SHAPES_INFERENCE_SOURCES})
SOURCE_GROUP ("Learning Files" FILES ${MODULE_SHAPES_LEARNING_SOURCES} )


#ADD_LIBRARY(hopstatic STATIC ${LIB_SOURCES} ${LIB_HEADERS})

#SOURCE_GROUP ("Header Files" FILES ${LIB_HEADERS})

ADD_SUBDIRECTORY(tools)


